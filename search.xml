<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>当你翻到一个树莓派小车时怎么下手</title>
      <link href="/2022/01/22/dang-ni-fan-dao-yi-ge-shu-mei-pai-xiao-che-shi-zen-me-xia-shou/"/>
      <url>/2022/01/22/dang-ni-fan-dao-yi-ge-shu-mei-pai-xiao-che-shi-zen-me-xia-shou/</url>
      
        <content type="html"><![CDATA[<h1 id="如何对一个“三无产品”的树莓派小车下手"><a href="#如何对一个“三无产品”的树莓派小车下手" class="headerlink" title="如何对一个“三无产品”的树莓派小车下手"></a>如何对一个“三无产品”的树莓派小车下手</h1><h2 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h2><p>相信很多人在学校的实验室有这样的经历：从实验室的杂物箱子中翻出了不知是几届前的学长留下来的老古董，恰巧的是这个东西又是一个“三无产品”卖家连个商标都没有打上去，找不到任何的小车资料。这种东西弃之可惜，留着碍位置，只能继续吃灰。很不巧今天对一辆在实验室箱子里的树莓派ROS激光雷达小车实在看不下去了。于是今天带大家探案一波。</p><h2 id="二、开始破案"><a href="#二、开始破案" class="headerlink" title="二、开始破案"></a>二、开始破案</h2><h3 id="2-1-案件背景"><a href="#2-1-案件背景" class="headerlink" title="2.1 案件背景"></a>2.1 案件背景</h3><p>发现无名树莓派小车一台</p><p><img src="/.com//01/22/dang-ni-fan-dao-yi-ge-shu-mei-pai-xiao-che-shi-zen-me-xia-shou/rubish.jpg" alt="rubish"></p><img src="/.com//01/22/dang-ni-fan-dao-yi-ge-shu-mei-pai-xiao-che-shi-zen-me-xia-shou/rubish.jpg" class title="这是一张图片"><h3 id="2-2-开始整活"><a href="#2-2-开始整活" class="headerlink" title="2.2 开始整活"></a>2.2 开始整活</h3><p>本来准备拆解当零件用，一不小心把开关打开了，瞬间前面的舵轮动了一下，接着激光雷达也动了起来，看着它活蹦乱跳，怎么忍心把它肢解了呢。既然激光雷达能动，说明激光雷达应该是好的，树莓派里面应该装了出厂程序，不妨先看看树莓派里面有啥吧。</p><h3 id="2-3-去树莓派里面看看"><a href="#2-3-去树莓派里面看看" class="headerlink" title="2.3 去树莓派里面看看"></a>2.3 去树莓派里面看看</h3><p>找了找HDMI接口。……..</p><p><img src="/.com//%E5%BD%93%E4%BD%A0%E7%BF%BB%E5%88%B0%E4%B8%80%E4%B8%AA%E6%A0%91%E8%8E%93%E6%B4%BE%E5%B0%8F%E8%BD%A6%E6%97%B6%E6%80%8E%E4%B9%88%E4%B8%8B%E6%89%8B%5CHDMI.png" alt="HDMI"></p><p>怎么会有那么反人类的设计！！！</p><p>怪不得商家不敢印商标</p><p>思索了一下</p><p>旁边有一个网口，让树莓派连上网后SSH连接它。虽然我不知道他的账号密码。但是先试试吧。</p><p>插上网线</p><p>去路由器管理界面看看IP</p><p><img src="/.com//%E5%BD%93%E4%BD%A0%E7%BF%BB%E5%88%B0%E4%B8%80%E4%B8%AA%E6%A0%91%E8%8E%93%E6%B4%BE%E5%B0%8F%E8%BD%A6%E6%97%B6%E6%80%8E%E4%B9%88%E4%B8%8B%E6%89%8B%5CIP.png" alt="IP"></p><p>发现了一个叫nanorobot的东西。</p><h3 id="2-4-SSH连接树莓派"><a href="#2-4-SSH连接树莓派" class="headerlink" title="2.4 SSH连接树莓派"></a>2.4 SSH连接树莓派</h3><p><strong>一般来说</strong>这东西的用户名和密码都是这个，抱着试一试的心态。果然连接上了！！可是我想看看激光雷达的RVIZ扫描图看看激光雷达是不是好的。</p><h3 id="2-5-配置VNC远程桌面"><a href="#2-5-配置VNC远程桌面" class="headerlink" title="2.5 配置VNC远程桌面"></a>2.5 配置VNC远程桌面</h3><p>连接时提示是Ubuntu16.04的系统，一般来说树莓派和Ubuntu自带VNC远程桌面连接，如果没有，运行以下命令安装</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"># 更新源sudo apt-get update# 安装VNC服务sudo apt-get update<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>接着启动VNC服务</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"># 如果提示找不到说明没有安装，输入上面的命令安装vncserver<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/.com//%E5%BD%93%E4%BD%A0%E7%BF%BB%E5%88%B0%E4%B8%80%E4%B8%AA%E6%A0%91%E8%8E%93%E6%B4%BE%E5%B0%8F%E8%BD%A6%E6%97%B6%E6%80%8E%E4%B9%88%E4%B8%8B%E6%89%8B%5Cvnc.png" alt="VNC"></p><p>会让你输入一个密码，密码长度小于8，密码不会显示，密码会让你输入两遍验证。</p><p>反馈的提示中有：New ‘X’ desktop is nanorobot:1</p><p>这个1代表5900+1端口</p><p>因为VNC可以开多个端口使用</p><h3 id="2-6-VNC连接树莓派"><a href="#2-6-VNC连接树莓派" class="headerlink" title="2.6 VNC连接树莓派"></a>2.6 VNC连接树莓派</h3><p>去[官网](<a href="https://www.realvnc.com/en/connect/download/viewer/">Download VNC Viewer | VNC® Connect (realvnc.com)</a>)下载VNC Windows客户端</p><p><img src="/.com//Users\33124\Desktop\项目开发\个人博客\Hexo\blog\source_posts\当你翻到一个树莓派小车时怎么下手\client.png" alt="client"></p><p>输入IP:端口连接，不加端口默认5900</p><p>![log in](当你翻到一个树莓派小车时怎么下手\log in.png)</p><p>接着就成功进入了树莓派的桌面了。</p><h2 id="三-、尾言"><a href="#三-、尾言" class="headerlink" title="三 、尾言"></a>三 、尾言</h2><p>顺着它的用户名，顺藤摸瓜的找到了淘宝商家，要来了资料。又可以废物利用啦！</p>]]></content>
      
      
      
        <tags>
            
            <tag> 树莓派 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/01/21/hello-world/"/>
      <url>/2022/01/21/hello-world/</url>
      
        <content type="html"><![CDATA[<h1 id="Hello-World"><a href="#Hello-World" class="headerlink" title="Hello World"></a>Hello World</h1><p>经过一番折腾，我选择放弃了Ghost,拿起Hexo，选择重来</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Hello World!<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux下配置小熊派-鸿蒙·叔(BearPi-HM Micro)设备开发的开发环境</title>
      <link href="/2022/01/21/linux-pei-zhi-xiao-xiong-pai/"/>
      <url>/2022/01/21/linux-pei-zhi-xiao-xiong-pai/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux下配置小熊派-鸿蒙·叔-BearPi-HM-Micro-设备开发的开发环境"><a href="#Linux下配置小熊派-鸿蒙·叔-BearPi-HM-Micro-设备开发的开发环境" class="headerlink" title="Linux下配置小熊派-鸿蒙·叔(BearPi-HM Micro)设备开发的开发环境"></a>Linux下配置小熊派-鸿蒙·叔(BearPi-HM Micro)设备开发的开发环境</h1><h2 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h2><p><em>BearPi-HM Micro开发板是一块高度集成并可运行Openharmony系统的开发板，板载高性能的工业级处理器STM32MP157芯片，搭配4.3寸LCD电容式触摸屏，并板载wifi电路及标准的E53接口。</em>上面是废话，单纯介绍小熊派的简单情况。官方有一个看似十分有一个十分简单的“10分钟”教程，<a href="https://gitee.com/bearpi/bearpi-hm_micro_small/blob/master/applications/BearPi/BearPi-HM_Micro/docs/device-dev/BearPi-HM_Micro%E5%8D%81%E5%88%86%E9%92%9F%E4%B8%8A%E6%89%8B.md">官网教程</a>。但是我觉得他的开发模式反而把简单的事情复杂化了。官方考虑到大多数人用Windows系统，而鸿蒙代码的编译又要在Linux系统，所以采用了虚拟机装Linux系统的方案，代码编译完成后却又把固件放在Windows系统用STM32CubeProgrammer进行一个固件的烧录。这样绕来绕去估计好多小伙伴都绕晕了。STM32CubeProgrammer是用JAVA开发的，Windows、Linux、MacOS全平台通用，所以费不着在绕回Windows进行一个烧写固件的操作，直接在Linux下烧录就行了。本着奥卡姆剃刀原理的精神，写下这篇教程。本篇文章适合有Linux基础，装了双系统或者U盘装了Linux系统的小伙伴,以及准备在Linux继续开发小熊派的小伙伴（虚拟机未实测，出了问题自己想办法）。<strong>以Ubuntu 20.04系统为例，从0开始一点点实现安装，编译，烧录全流程。</strong><del>本以为Stm32CubeProgrammer装了在Linux上就完事了，谁知遇到了一些让我不知所措的问题，好在最好成功解决</del></p><h2 id="二、准备工作"><a href="#二、准备工作" class="headerlink" title="二、准备工作"></a>二、准备工作</h2><ol><li>一台以及装在实体机上的Linux系统，这里以Ubuntu为例。（不推荐虚拟机，出了问题自己解决）</li><li>畅通无阻的网络</li><li>小熊派-鸿蒙·叔(BearPi-HM Micro)一台</li></ol><h2 id="三、流程简介"><a href="#三、流程简介" class="headerlink" title="三、流程简介"></a>三、流程简介</h2><p>  修改bash –&gt; 安装依赖 –&gt; 检查Python3.7+ –&gt; 安装hb –&gt; 安装mkimage.stm32 –&gt; 安装STM32CubeProgrammer –&gt; 安装CH340驱动 –&gt; 获取源码 –&gt; 编译烧录</p><h2 id="四、开始安装"><a href="#四、开始安装" class="headerlink" title="四、开始安装"></a>四、开始安装</h2><h3 id="1-将Linux-shell改为bash"><a href="#1-将Linux-shell改为bash" class="headerlink" title="1.将Linux shell改为bash"></a>1.将Linux shell改为bash</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">#查看shell是否为bash.ls -l &#x2F;bin&#x2F;sh#如果为显示为&#x2F;bin&#x2F;sh -&gt; bash则为正常，否则请按以下方式修改#方法一：在终端运行如下命令，然后选择 no。sudo dpkg-reconfigure dash#方法二：先删除sh，再创建软链接。rm -rf &#x2F;bin&#x2F;shsudo ln -s &#x2F;bin&#x2F;bash &#x2F;bin&#x2F;sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-安装安装必要的库和工具"><a href="#2-安装安装必要的库和工具" class="headerlink" title="2.安装安装必要的库和工具"></a>2.安装安装必要的库和工具</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">sudo apt-get install build-essential gcc g++ make zlib* libffi-dev e2fsprogs pkg-config flex bison perl bc openssl libssl-dev libelf-dev libc6-dev-amd64 binutils binutils-dev libdwarf-dev u-boot-tools mtd-utils gcc-arm-linux-gnueabi cpio device-tree-compiler net-tools openssh-server git vim openjdk-11-jre-headless<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="3-检查Python环境"><a href="#3-检查Python环境" class="headerlink" title="3.检查Python环境"></a>3.检查Python环境</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"># 输入如下命令，查看python版本号,确保版本python3.7+python3 --version# 如果低于python3.7版本，不建议直接升级，请按照如下步骤重新安装。# 以python3.8为例，按照以下步骤安装pythonsudo apt-get install python3.8# 设置python和python3软链接为python3.8sudo update-alternatives --install &#x2F;usr&#x2F;bin&#x2F;python python &#x2F;usr&#x2F;bin&#x2F;python3.8 1sudo update-alternatives --install &#x2F;usr&#x2F;bin&#x2F;python3 python3 &#x2F;usr&#x2F;bin&#x2F;python3.8 1# 安装并升级Python包管理工具（pip3）sudo apt-get install python3-setuptools python3-pip -ysudo pip3 install --upgrade pip<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-安装hb"><a href="#4-安装hb" class="headerlink" title="4.安装hb"></a>4.安装hb</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"># 运行安装命令python3 -m pip install --user ohos-build# 配置环境命令(用Ubuntu自带的gedit比较方便，如果是其他Linux发行版的可以使用vi或vim)gedit ~&#x2F;.bashrc# 将以下命令拷贝到.bashrc文件的最后一行，(ctrl+s)保存并退出export PATH&#x3D;~&#x2F;.local&#x2F;bin:$PATH# 执行如下命令更新环境变量source ~&#x2F;.bashrc<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"># 测试是否安装成功hb -h# 会看到如下输出<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="5-安装mkimage-stm32"><a href="#5-安装mkimage-stm32" class="headerlink" title="5.安装mkimage.stm32"></a>5.安装mkimage.stm32</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"># 1.新建tools目录mkdir ~&#x2F;tools# 2.下载mkimage.stm32工具，并复制到~&#x2F;tools目录下(“~”代表的是你的用户目录)# 3.执行以下命令修改mkimage.stm32工具权限chmod 777 ~&#x2F;tools&#x2F;mkimage.stm32# 4.设置环境变量gedit ~&#x2F;.bashrc# 将以下命令拷贝到.bashrc文件的最后一行，保存并退出export PATH&#x3D;~&#x2F;tools:$PATH# 执行如下命令更新环境变量source ~&#x2F;.bashrc<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="6-安装Stm32CubeProgrammer"><a href="#6-安装Stm32CubeProgrammer" class="headerlink" title="6.安装Stm32CubeProgrammer"></a>6.安装Stm32CubeProgrammer</h3><ol><li><p>下载Stm32CubeProgrammer的Linux安装包，<a href>官网链接</a></p></li><li><p>解压双击.linux文件安装</p></li><li><p>一路下一步</p></li><li><p><strong>添加规则文件</strong>（这一步要了我的命，作为最核心的一步，折腾不好差点就放弃了，好在老师救了我）</p><ul><li><p>找到Stm32CubeProgrammer安装目录，安装时可以选择，在用户目录下</p><p><img src="/.com//Linux%E9%85%8D%E7%BD%AE%E5%B0%8F%E7%86%8A%E6%B4%BE%5CStm32CubeProgrammer%E7%9B%AE%E5%BD%95.gif" alt="Stm32CubeProgrammer目录"></p></li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"># 进入Drivers&#x2F;rules文件夹cd Drivers&#x2F;rules# 复制.rules文件到&#x2F;etc&#x2F;udev&#x2F;rules.dsudo cp 49-stlinkv2-1.rules 49-stlinkv2.rules 49-stlinkv3.rules 50-usb-conf.rules &#x2F;etc&#x2F;udev&#x2F;rules.d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>完成。（添加规则文件这一步十分重要，没有添加在Stm32CubeProgrammer中就检测不到USB了）</p></li></ol><h3 id="7-安装CH340驱动"><a href="#7-安装CH340驱动" class="headerlink" title="7.安装CH340驱动"></a>7.安装CH340驱动</h3><ol><li><p>下载CH340的Linux驱动（不要纠结340还是341的问题，能用就行），<a href="http://www.wch.cn/download/CH341SER_LINUX_ZIP.html">官网链接</a></p></li><li><p>解压到任意目录</p></li><li><p>~~~bash</p><h1 id="查看Linux自带的驱动"><a href="#查看Linux自带的驱动" class="headerlink" title="查看Linux自带的驱动"></a>查看Linux自带的驱动</h1><p>ls /lib/modules/$(uname -r)/kernel/drivers/usb/serial</p><h1 id="删除原有驱动"><a href="#删除原有驱动" class="headerlink" title="删除原有驱动"></a>删除原有驱动</h1><p>cd /lib/modules/$(uname -r)/kernel/drivers/usb/serial<br>sudo rm -rf ch341.ko</p><h1 id="查询操作系统的内核版本号"><a href="#查询操作系统的内核版本号" class="headerlink" title="查询操作系统的内核版本号"></a>查询操作系统的内核版本号</h1><p>uname -r</p><pre class="line-numbers language-none"><code class="language-none">4. 到这个网站寻找对应的代码5. 打开ch34x.c，替换掉里面的代码6. ~~~bash   # 在当前目录打开命令行   make   # 复制ch34x.ko文件   sudo cp ch34x.ko &#x2F;lib&#x2F;modules&#x2F;$(uname -r)&#x2F;kernel&#x2F;drivers&#x2F;usb&#x2F;serial <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>~~~bash</p><h1 id="输入lsmod命令查看是否安装成功"><a href="#输入lsmod命令查看是否安装成功" class="headerlink" title="输入lsmod命令查看是否安装成功"></a>输入lsmod命令查看是否安装成功</h1><p>lsmod</p><h1 id="存在代表成功"><a href="#存在代表成功" class="headerlink" title="存在代表成功"></a>存在代表成功</h1><p>Module                  Size  Used by<br>usbserial              53248  1 ch34x</p><pre class="line-numbers language-none"><code class="language-none">### 8.获取源码在此之前需要先注册gitee账号，并配置邮箱。[源码链接]( https:&#x2F;&#x2F;gitee.com&#x2F;bearpi&#x2F;bearpi-hm_micro_small)~~~bashgit config --global user.name &quot;yourname&quot;git config --global user.email “your-email-address&quot;git clone https:&#x2F;&#x2F;gitee.com&#x2F;bearpi&#x2F;bearpi-hm_micro_small.git -b master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h3 id="9-编译安装"><a href="#9-编译安装" class="headerlink" title="9.编译安装"></a>9.编译安装</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"># 进入下载路径cd ~&#x2F;bearpi-hm_micro_small# 开始编译hb set# 输入当前路径.# 回车选择“bearpi-hm_micro”# 编译hb build -t notest --tee -f# 等待直到屏幕出现：build success字样，说明编译成功。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="10-复制系统镜像"><a href="#10-复制系统镜像" class="headerlink" title="10.复制系统镜像"></a>10.复制系统镜像</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">cp out&#x2F;bearpi_hm_micro&#x2F;bearpi_hm_micro&#x2F;OHOS_Image.stm32 applications&#x2F;BearPi&#x2F;BearPi-HM_Micro&#x2F;tools&#x2F;download_img&#x2F;kernel&#x2F;cp out&#x2F;bearpi_hm_micro&#x2F;bearpi_hm_micro&#x2F;rootfs_vfat.img applications&#x2F;BearPi&#x2F;BearPi-HM_Micro&#x2F;tools&#x2F;download_img&#x2F;kernel&#x2F;cp out&#x2F;bearpi_hm_micro&#x2F;bearpi_hm_micro&#x2F;userfs_vfat.img applications&#x2F;BearPi&#x2F;BearPi-HM_Micro&#x2F;tools&#x2F;download_img&#x2F;kernel&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="11-烧写固件"><a href="#11-烧写固件" class="headerlink" title="11.烧写固件"></a>11.烧写固件</h3><p><img src="/.com//Linux%E9%85%8D%E7%BD%AE%E5%B0%8F%E7%86%8A%E6%B4%BE%5C%E7%83%A7%E5%86%99%E5%9B%BA%E4%BB%B6.gif" alt="烧写固件"></p><ol><li>将开发板的拨码开关上拨到“000”烧录模式，并按一下开发板的RESET按键</li></ol><p>​                                                            <img src="/.com//Linux%E9%85%8D%E7%BD%AE%E5%B0%8F%E7%86%8A%E6%B4%BE%5Creset.png" alt="reset"></p><ol start="2"><li><p>点击STM32CubeProgrammer工具的“+”按钮，<br>然后选择烧录配置的tsv文件。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"># 目录地址bearpi-hm_micro_small&#x2F;applications&#x2F;BearPi&#x2F;BearPi-HM_Micro&#x2F;tools&#x2F;download_img&#x2F;flashlayout<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>点击Browse按钮，然后选择工程源码下的烧录镜像路径，选择到download_img即可</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"># 路径为bearpi-hm_micro_small&#x2F;applications&#x2F;BearPi&#x2F;BearPi-HM_Micro&#x2F;tools&#x2F;download_img<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>点击Download按钮启动镜像烧录，并等待烧录完毕</p></li></ol><h3 id="12-下载minicom工具"><a href="#12-下载minicom工具" class="headerlink" title="12.下载minicom工具"></a>12.下载minicom工具</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"># 安装minicomsudo apt-get install minicom# 查看串口信息dmesg | grep ttyUSB# 修改minicom 配置sudo minicom -s<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>选择serial port setup 回车</p><p> 按下键盘A 修改serial Device 的 值为步骤2的串口信息</p><p> 按下回车,光标会走到Change which setting?</p><p>然后回车,然后选择 Save setup as dfl 回车,回车后选择Exit 回车</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"># 连接小熊派终端sudo minicom<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="五、完毕"><a href="#五、完毕" class="headerlink" title="五、完毕"></a>五、完毕</h2>]]></content>
      
      
      <categories>
          
          <category> 鸿蒙嵌入式开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 鸿蒙 </tag>
            
            <tag> Harmony </tag>
            
            <tag> Linux </tag>
            
            <tag> BearPi </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
